import tkinter as tk
from PIL import ImageTk, Image
import cmath, math,numpy
import time
from tkinter import *
from PIL import Image, ImageTk
import cv2
import os,sys

###################################################################

###############################################################
def resource_path(relative_path):
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")
    return os.path.join(base_path,relative_path)











def calculate():
    # Get the values of the two input fields
    num1 = float(entry1.get()) #dw
    num2 = float(entry2.get()) #rh
    num3 = float(entry3.get()) #sv
    num4 = float(entry4.get()) # ps
    wh = num1*num2
    pv_size = wh*(1.3/num4)
    charge_controller = num1*(1.25/num3)
    battery_size = wh/(.8*.6*num3)
    inverter = num1*1.25


    # Clear the output label
    label_output.config(text="")

    # Set the output label to the sum
    label_output.config(text=f"PV Size :{pv_size} Watt\nCharge Controller :{charge_controller} A\nBattery Size :{battery_size}Ah\nInverter size :{inverter} Watt", font=("Arial Bold", 12),bg="yellow")

# Create the main window
window = tk.Tk()
window.title("Solar System Calculator")
window.iconbitmap(resource_path('c.ico'))
#window.geometry("750x270")
myImg = ImageTk.PhotoImage(Image.open(resource_path('ppp.jpg')))
labell = tk.Label(image=myImg)
labelx = tk.Label(window, text="Solar System Calculator")
labelx.pack()
labell.pack()

# Create two input fields
entry1 = tk.Entry(window)
entry2 = tk.Entry(window)
entry3 = tk.Entry(window)
entry4 = tk.Entry(window)
entry5 = tk.Entry(window)
label = tk.Label(window, text="Demand Watt")
label.pack()
entry1.pack()

label2 = tk.Label(window, text="Running Hours")
label2.pack()
entry2.pack()

label3 = tk.Label(window, text="System Voltage")
label3.pack()
entry3.pack()

label4 = tk.Label(window, text="Peak sun")
label4.pack()
entry4.pack()


# Create a button to trigger the calculation
button = tk.Button(window, text="Calculate", command=calculate,bg="red")
button.pack()

# Create an output label
label_output = tk.Label(window)
label_output.pack()


# Run the main loop
window.mainloop()
