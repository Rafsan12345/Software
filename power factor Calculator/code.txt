import tkinter as tk
from PIL import ImageTk, Image
import cmath, math,numpy
import time
import os,sys
###################################################################
class TRG():
    def cos(a):
        Radians90 = math.radians(a)

        cos90 = math.cos(Radians90)

        cos90Rounded = round(cos90, 2)
        return cos90Rounded

    def sin(a):
        Radians90 = math.radians(a)

        cos90 = math.sin(Radians90)

        cos90Rounded = round(cos90, 2)
        return cos90Rounded
    def invc(c):
       return ((math.acos(c) * 180) / math.pi)
    def invs(f):
       return ((math.asin(f) * 180) / math.pi)






























###############################################################
def calculate():
    # Get the values of the two input fields
    num1 = float(entry1.get())
    num2 = float(entry2.get())
    num3 = float(entry3.get())
    num4 = float(entry4.get())
    num5 = float(entry5.get())

    #############
    p = num1
    t = num2
    kw = num4
    f = num5
    v = num3
    w = 2 * math.pi * f * (v ** 2)
    thita1 = TRG.invc(p)
    thita2 = TRG.invc(t)
    sin1 = TRG.sin(thita1)
    sin2 = TRG.sin(thita2)
    KV1 = kw / p
    KV2 = kw / t
    kvar1 = KV1 * sin1
    kvar2 = KV2 * sin2
    ppp = kvar1 - kvar2
    #############

    # Clear the output label
    label_output.config(text="")

    # Set the output label to the sum
    label_output.config(text=f"Requred Kvar > {ppp} if you use 3phase > {ppp/3} Capacitance Recruite >{ppp/(w)}uf")



def resource_path(relative_path):
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")
    return os.path.join(base_path,relative_path)




# Create the main window
window = tk.Tk()
window.title("Power Factor Calculator")
window.iconbitmap(resource_path('c.ico'))
myImg = ImageTk.PhotoImage(Image.open(resource_path('ccc.jpg')))
labell = tk.Label(image=myImg)
labelx = tk.Label(window, text="Power Factor Calculator")
labelx.pack()
labell.pack()


# Create two input fields
entry1 = tk.Entry(window)
entry2 = tk.Entry(window)
entry3 = tk.Entry(window)
entry4 = tk.Entry(window)
entry5 = tk.Entry(window)
label = tk.Label(window, text="Present PF")
label.pack()
entry1.pack()

label2 = tk.Label(window, text="Target PF")
label2.pack()
entry2.pack()

label3 = tk.Label(window, text="Voltage or RMS")
label3.pack()
entry3.pack()

label4 = tk.Label(window, text="KW")
label4.pack()
entry4.pack()

label7 = tk.Label(window, text="Frequency")
label7.pack()
entry5.pack()



# Create a button to trigger the calculation
button = tk.Button(window, text="Calculate", command=calculate)
button.pack()

# Create an output label
label_output = tk.Label(window)
label_output.pack()


# Run the main loop
window.mainloop()
